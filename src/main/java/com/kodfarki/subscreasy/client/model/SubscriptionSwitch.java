/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kodfarki.subscreasy.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SubscriptionSwitch
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-28T23:21:44.006+03:00")
public class SubscriptionSwitch {
  /**
   * Gets or Sets cancelExistingSubscription
   */
  @JsonAdapter(CancelExistingSubscriptionEnum.Adapter.class)
  public enum CancelExistingSubscriptionEnum {
    IMMEDIATE("IMMEDIATE"),
    
    ENDOFTHEPERIOD("ENDOFTHEPERIOD");

    private String value;

    CancelExistingSubscriptionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CancelExistingSubscriptionEnum fromValue(String text) {
      for (CancelExistingSubscriptionEnum b : CancelExistingSubscriptionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CancelExistingSubscriptionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CancelExistingSubscriptionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CancelExistingSubscriptionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CancelExistingSubscriptionEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("cancelExistingSubscription")
  private CancelExistingSubscriptionEnum cancelExistingSubscription = null;

  @SerializedName("nextOfferId")
  private Long nextOfferId = null;

  @SerializedName("subscriptionId")
  private Long subscriptionId = null;

  public SubscriptionSwitch cancelExistingSubscription(CancelExistingSubscriptionEnum cancelExistingSubscription) {
    this.cancelExistingSubscription = cancelExistingSubscription;
    return this;
  }

   /**
   * Get cancelExistingSubscription
   * @return cancelExistingSubscription
  **/
  @ApiModelProperty(value = "")
  public CancelExistingSubscriptionEnum getCancelExistingSubscription() {
    return cancelExistingSubscription;
  }

  public void setCancelExistingSubscription(CancelExistingSubscriptionEnum cancelExistingSubscription) {
    this.cancelExistingSubscription = cancelExistingSubscription;
  }

  public SubscriptionSwitch nextOfferId(Long nextOfferId) {
    this.nextOfferId = nextOfferId;
    return this;
  }

   /**
   * Get nextOfferId
   * @return nextOfferId
  **/
  @ApiModelProperty(value = "")
  public Long getNextOfferId() {
    return nextOfferId;
  }

  public void setNextOfferId(Long nextOfferId) {
    this.nextOfferId = nextOfferId;
  }

  public SubscriptionSwitch subscriptionId(Long subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

   /**
   * Get subscriptionId
   * @return subscriptionId
  **/
  @ApiModelProperty(value = "")
  public Long getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(Long subscriptionId) {
    this.subscriptionId = subscriptionId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionSwitch subscriptionSwitch = (SubscriptionSwitch) o;
    return Objects.equals(this.cancelExistingSubscription, subscriptionSwitch.cancelExistingSubscription) &&
        Objects.equals(this.nextOfferId, subscriptionSwitch.nextOfferId) &&
        Objects.equals(this.subscriptionId, subscriptionSwitch.subscriptionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cancelExistingSubscription, nextOfferId, subscriptionId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionSwitch {\n");
    
    sb.append("    cancelExistingSubscription: ").append(toIndentedString(cancelExistingSubscription)).append("\n");
    sb.append("    nextOfferId: ").append(toIndentedString(nextOfferId)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

