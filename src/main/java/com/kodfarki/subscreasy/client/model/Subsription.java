/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kodfarki.subscreasy.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kodfarki.subscreasy.client.model.Company;
import com.kodfarki.subscreasy.client.model.Coupon;
import com.kodfarki.subscreasy.client.model.Offer;
import com.kodfarki.subscreasy.client.model.SavedCard;
import com.kodfarki.subscreasy.client.model.ServiceInstance;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Subsription
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-30T00:20:36.956+03:00")
public class Subsription {
  @SerializedName("appliedCoupon")
  private Coupon appliedCoupon = null;

  @SerializedName("cancelDate")
  private OffsetDateTime cancelDate = null;

  @SerializedName("card")
  private SavedCard card = null;

  @SerializedName("company")
  private Company company = null;

  @SerializedName("endDate")
  private OffsetDateTime endDate = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("nextChargingDate")
  private OffsetDateTime nextChargingDate = null;

  @SerializedName("offer")
  private Offer offer = null;

  @SerializedName("services")
  private List<ServiceInstance> services = null;

  @SerializedName("startDate")
  private OffsetDateTime startDate = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NEW("NEW"),
    
    ACTIVE("ACTIVE"),
    
    SUSPENDED("SUSPENDED"),
    
    FINISHED("FINISHED"),
    
    CANCELLED("CANCELLED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("subscriberId")
  private String subscriberId = null;

  @SerializedName("version")
  private Long version = null;

  public Subsription appliedCoupon(Coupon appliedCoupon) {
    this.appliedCoupon = appliedCoupon;
    return this;
  }

   /**
   * Get appliedCoupon
   * @return appliedCoupon
  **/
  @ApiModelProperty(value = "")
  public Coupon getAppliedCoupon() {
    return appliedCoupon;
  }

  public void setAppliedCoupon(Coupon appliedCoupon) {
    this.appliedCoupon = appliedCoupon;
  }

  public Subsription cancelDate(OffsetDateTime cancelDate) {
    this.cancelDate = cancelDate;
    return this;
  }

   /**
   * Get cancelDate
   * @return cancelDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCancelDate() {
    return cancelDate;
  }

  public void setCancelDate(OffsetDateTime cancelDate) {
    this.cancelDate = cancelDate;
  }

  public Subsription card(SavedCard card) {
    this.card = card;
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @ApiModelProperty(value = "")
  public SavedCard getCard() {
    return card;
  }

  public void setCard(SavedCard card) {
    this.card = card;
  }

  public Subsription company(Company company) {
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @ApiModelProperty(required = true, value = "")
  public Company getCompany() {
    return company;
  }

  public void setCompany(Company company) {
    this.company = company;
  }

  public Subsription endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }

  public Subsription id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Subsription nextChargingDate(OffsetDateTime nextChargingDate) {
    this.nextChargingDate = nextChargingDate;
    return this;
  }

   /**
   * Get nextChargingDate
   * @return nextChargingDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getNextChargingDate() {
    return nextChargingDate;
  }

  public void setNextChargingDate(OffsetDateTime nextChargingDate) {
    this.nextChargingDate = nextChargingDate;
  }

  public Subsription offer(Offer offer) {
    this.offer = offer;
    return this;
  }

   /**
   * Get offer
   * @return offer
  **/
  @ApiModelProperty(required = true, value = "")
  public Offer getOffer() {
    return offer;
  }

  public void setOffer(Offer offer) {
    this.offer = offer;
  }

  public Subsription services(List<ServiceInstance> services) {
    this.services = services;
    return this;
  }

  public Subsription addServicesItem(ServiceInstance servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<ServiceInstance>();
    }
    this.services.add(servicesItem);
    return this;
  }

   /**
   * Get services
   * @return services
  **/
  @ApiModelProperty(value = "")
  public List<ServiceInstance> getServices() {
    return services;
  }

  public void setServices(List<ServiceInstance> services) {
    this.services = services;
  }

  public Subsription startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public Subsription status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Subsription subscriberId(String subscriberId) {
    this.subscriberId = subscriberId;
    return this;
  }

   /**
   * Get subscriberId
   * @return subscriberId
  **/
  @ApiModelProperty(value = "")
  public String getSubscriberId() {
    return subscriberId;
  }

  public void setSubscriberId(String subscriberId) {
    this.subscriberId = subscriberId;
  }

  public Subsription version(Long version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public Long getVersion() {
    return version;
  }

  public void setVersion(Long version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Subsription subsription = (Subsription) o;
    return Objects.equals(this.appliedCoupon, subsription.appliedCoupon) &&
        Objects.equals(this.cancelDate, subsription.cancelDate) &&
        Objects.equals(this.card, subsription.card) &&
        Objects.equals(this.company, subsription.company) &&
        Objects.equals(this.endDate, subsription.endDate) &&
        Objects.equals(this.id, subsription.id) &&
        Objects.equals(this.nextChargingDate, subsription.nextChargingDate) &&
        Objects.equals(this.offer, subsription.offer) &&
        Objects.equals(this.services, subsription.services) &&
        Objects.equals(this.startDate, subsription.startDate) &&
        Objects.equals(this.status, subsription.status) &&
        Objects.equals(this.subscriberId, subsription.subscriberId) &&
        Objects.equals(this.version, subsription.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appliedCoupon, cancelDate, card, company, endDate, id, nextChargingDate, offer, services, startDate, status, subscriberId, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Subsription {\n");
    
    sb.append("    appliedCoupon: ").append(toIndentedString(appliedCoupon)).append("\n");
    sb.append("    cancelDate: ").append(toIndentedString(cancelDate)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    nextChargingDate: ").append(toIndentedString(nextChargingDate)).append("\n");
    sb.append("    offer: ").append(toIndentedString(offer)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subscriberId: ").append(toIndentedString(subscriberId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

