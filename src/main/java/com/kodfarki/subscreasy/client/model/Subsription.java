/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kodfarki.subscreasy.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kodfarki.subscreasy.client.model.Company;
import com.kodfarki.subscreasy.client.model.Coupon;
import com.kodfarki.subscreasy.client.model.Offer;
import com.kodfarki.subscreasy.client.model.SavedCard;
import com.kodfarki.subscreasy.client.model.ServiceInstance;
import com.kodfarki.subscreasy.client.model.Subscriber;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Subsription
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-12-03T15:39:09.262+03:00")
public class Subsription {
  @SerializedName("appliedCoupon")
  private Coupon appliedCoupon = null;

  @SerializedName("cancelDate")
  private OffsetDateTime cancelDate = null;

  @SerializedName("card")
  private SavedCard card = null;

  @SerializedName("company")
  private Company company = null;

  @SerializedName("endDate")
  private OffsetDateTime endDate = null;

  @SerializedName("id")
  private Long id = null;

  /**
   * Gets or Sets lastEvent
   */
  @JsonAdapter(LastEventEnum.Adapter.class)
  public enum LastEventEnum {
    STARTED("STARTED"),
    
    RENEWED("RENEWED"),
    
    RENEWAL_FAILED("RENEWAL_FAILED"),
    
    FINISHED("FINISHED"),
    
    CANCELLED("CANCELLED"),
    
    SUBSCRIBER_CREATED("SUBSCRIBER_CREATED"),
    
    SUBSCRIBER_UPDATED("SUBSCRIBER_UPDATED"),
    
    TRIAL_ENDING("TRIAL_ENDING"),
    
    PAYMENT_UPDATED("PAYMENT_UPDATED"),
    
    IMMEDIATE_CANCELLATION_REQUESTED("IMMEDIATE_CANCELLATION_REQUESTED"),
    
    ENDOFPERIOD_CANCELLATION_REQUESTED("ENDOFPERIOD_CANCELLATION_REQUESTED"),
    
    PRICE_UPDATED("PRICE_UPDATED");

    private String value;

    LastEventEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LastEventEnum fromValue(String text) {
      for (LastEventEnum b : LastEventEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<LastEventEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LastEventEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LastEventEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return LastEventEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("lastEvent")
  private LastEventEnum lastEvent = null;

  @SerializedName("offer")
  private Offer offer = null;

  /**
   * Gets or Sets paymentMethod
   */
  @JsonAdapter(PaymentMethodEnum.Adapter.class)
  public enum PaymentMethodEnum {
    OFFLINE("OFFLINE"),
    
    CC("CC"),
    
    MOBILE("MOBILE");

    private String value;

    PaymentMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PaymentMethodEnum fromValue(String text) {
      for (PaymentMethodEnum b : PaymentMethodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PaymentMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PaymentMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PaymentMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PaymentMethodEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("paymentMethod")
  private PaymentMethodEnum paymentMethod = null;

  @SerializedName("services")
  private List<ServiceInstance> services = null;

  @SerializedName("startDate")
  private OffsetDateTime startDate = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NEW("NEW"),
    
    ACTIVE("ACTIVE"),
    
    SUSPENDED("SUSPENDED"),
    
    FINISHED("FINISHED"),
    
    CANCELLED("CANCELLED"),
    
    IN_TRIAL("IN_TRIAL"),
    
    PAYMENT_DUE("PAYMENT_DUE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("subscriber")
  private Subscriber subscriber = null;

  @SerializedName("subscriberSecureId")
  private String subscriberSecureId = null;

  @SerializedName("termEndDate")
  private OffsetDateTime termEndDate = null;

  @SerializedName("termStartDate")
  private OffsetDateTime termStartDate = null;

  @SerializedName("trialEndDate")
  private OffsetDateTime trialEndDate = null;

  public Subsription appliedCoupon(Coupon appliedCoupon) {
    this.appliedCoupon = appliedCoupon;
    return this;
  }

   /**
   * Get appliedCoupon
   * @return appliedCoupon
  **/
  @ApiModelProperty(value = "")
  public Coupon getAppliedCoupon() {
    return appliedCoupon;
  }

  public void setAppliedCoupon(Coupon appliedCoupon) {
    this.appliedCoupon = appliedCoupon;
  }

  public Subsription cancelDate(OffsetDateTime cancelDate) {
    this.cancelDate = cancelDate;
    return this;
  }

   /**
   * Get cancelDate
   * @return cancelDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCancelDate() {
    return cancelDate;
  }

  public void setCancelDate(OffsetDateTime cancelDate) {
    this.cancelDate = cancelDate;
  }

  public Subsription card(SavedCard card) {
    this.card = card;
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @ApiModelProperty(value = "")
  public SavedCard getCard() {
    return card;
  }

  public void setCard(SavedCard card) {
    this.card = card;
  }

  public Subsription company(Company company) {
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @ApiModelProperty(required = true, value = "")
  public Company getCompany() {
    return company;
  }

  public void setCompany(Company company) {
    this.company = company;
  }

  public Subsription endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }

  public Subsription id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Subsription lastEvent(LastEventEnum lastEvent) {
    this.lastEvent = lastEvent;
    return this;
  }

   /**
   * Get lastEvent
   * @return lastEvent
  **/
  @ApiModelProperty(value = "")
  public LastEventEnum getLastEvent() {
    return lastEvent;
  }

  public void setLastEvent(LastEventEnum lastEvent) {
    this.lastEvent = lastEvent;
  }

  public Subsription offer(Offer offer) {
    this.offer = offer;
    return this;
  }

   /**
   * Get offer
   * @return offer
  **/
  @ApiModelProperty(required = true, value = "")
  public Offer getOffer() {
    return offer;
  }

  public void setOffer(Offer offer) {
    this.offer = offer;
  }

  public Subsription paymentMethod(PaymentMethodEnum paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @ApiModelProperty(value = "")
  public PaymentMethodEnum getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(PaymentMethodEnum paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public Subsription services(List<ServiceInstance> services) {
    this.services = services;
    return this;
  }

  public Subsription addServicesItem(ServiceInstance servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<ServiceInstance>();
    }
    this.services.add(servicesItem);
    return this;
  }

   /**
   * Get services
   * @return services
  **/
  @ApiModelProperty(value = "")
  public List<ServiceInstance> getServices() {
    return services;
  }

  public void setServices(List<ServiceInstance> services) {
    this.services = services;
  }

  public Subsription startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public Subsription status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Subsription subscriber(Subscriber subscriber) {
    this.subscriber = subscriber;
    return this;
  }

   /**
   * Get subscriber
   * @return subscriber
  **/
  @ApiModelProperty(value = "")
  public Subscriber getSubscriber() {
    return subscriber;
  }

  public void setSubscriber(Subscriber subscriber) {
    this.subscriber = subscriber;
  }

  public Subsription subscriberSecureId(String subscriberSecureId) {
    this.subscriberSecureId = subscriberSecureId;
    return this;
  }

   /**
   * Get subscriberSecureId
   * @return subscriberSecureId
  **/
  @ApiModelProperty(value = "")
  public String getSubscriberSecureId() {
    return subscriberSecureId;
  }

  public void setSubscriberSecureId(String subscriberSecureId) {
    this.subscriberSecureId = subscriberSecureId;
  }

  public Subsription termEndDate(OffsetDateTime termEndDate) {
    this.termEndDate = termEndDate;
    return this;
  }

   /**
   * Get termEndDate
   * @return termEndDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTermEndDate() {
    return termEndDate;
  }

  public void setTermEndDate(OffsetDateTime termEndDate) {
    this.termEndDate = termEndDate;
  }

  public Subsription termStartDate(OffsetDateTime termStartDate) {
    this.termStartDate = termStartDate;
    return this;
  }

   /**
   * Get termStartDate
   * @return termStartDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTermStartDate() {
    return termStartDate;
  }

  public void setTermStartDate(OffsetDateTime termStartDate) {
    this.termStartDate = termStartDate;
  }

  public Subsription trialEndDate(OffsetDateTime trialEndDate) {
    this.trialEndDate = trialEndDate;
    return this;
  }

   /**
   * Get trialEndDate
   * @return trialEndDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTrialEndDate() {
    return trialEndDate;
  }

  public void setTrialEndDate(OffsetDateTime trialEndDate) {
    this.trialEndDate = trialEndDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Subsription subsription = (Subsription) o;
    return Objects.equals(this.appliedCoupon, subsription.appliedCoupon) &&
        Objects.equals(this.cancelDate, subsription.cancelDate) &&
        Objects.equals(this.card, subsription.card) &&
        Objects.equals(this.company, subsription.company) &&
        Objects.equals(this.endDate, subsription.endDate) &&
        Objects.equals(this.id, subsription.id) &&
        Objects.equals(this.lastEvent, subsription.lastEvent) &&
        Objects.equals(this.offer, subsription.offer) &&
        Objects.equals(this.paymentMethod, subsription.paymentMethod) &&
        Objects.equals(this.services, subsription.services) &&
        Objects.equals(this.startDate, subsription.startDate) &&
        Objects.equals(this.status, subsription.status) &&
        Objects.equals(this.subscriber, subsription.subscriber) &&
        Objects.equals(this.subscriberSecureId, subsription.subscriberSecureId) &&
        Objects.equals(this.termEndDate, subsription.termEndDate) &&
        Objects.equals(this.termStartDate, subsription.termStartDate) &&
        Objects.equals(this.trialEndDate, subsription.trialEndDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appliedCoupon, cancelDate, card, company, endDate, id, lastEvent, offer, paymentMethod, services, startDate, status, subscriber, subscriberSecureId, termEndDate, termStartDate, trialEndDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Subsription {\n");
    
    sb.append("    appliedCoupon: ").append(toIndentedString(appliedCoupon)).append("\n");
    sb.append("    cancelDate: ").append(toIndentedString(cancelDate)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastEvent: ").append(toIndentedString(lastEvent)).append("\n");
    sb.append("    offer: ").append(toIndentedString(offer)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subscriber: ").append(toIndentedString(subscriber)).append("\n");
    sb.append("    subscriberSecureId: ").append(toIndentedString(subscriberSecureId)).append("\n");
    sb.append("    termEndDate: ").append(toIndentedString(termEndDate)).append("\n");
    sb.append("    termStartDate: ").append(toIndentedString(termStartDate)).append("\n");
    sb.append("    trialEndDate: ").append(toIndentedString(trialEndDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

