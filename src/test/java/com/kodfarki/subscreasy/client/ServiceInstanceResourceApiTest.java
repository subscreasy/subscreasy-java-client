/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kodfarki.subscreasy.client;

import com.kodfarki.subscreasy.ApiException;
import com.kodfarki.subscreasy.client.model.ServiceInstance;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServiceInstanceResourceApi
 */
@Ignore
public class ServiceInstanceResourceApiTest {

    private final ServiceInstanceResourceApi api = new ServiceInstanceResourceApi();

    
    /**
     * createServiceInstance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createServiceInstanceUsingPOSTTest() throws ApiException {
        ServiceInstance serviceInstance = null;
        ServiceInstance response = api.createServiceInstanceUsingPOST(serviceInstance);

        // TODO: test validations
    }
    
    /**
     * deleteServiceInstance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteServiceInstanceUsingDELETETest() throws ApiException {
        Long id = null;
        api.deleteServiceInstanceUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * getAllServiceInstances
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllServiceInstancesUsingGETTest() throws ApiException {
        List<ServiceInstance> response = api.getAllServiceInstancesUsingGET();

        // TODO: test validations
    }
    
    /**
     * getServiceInstance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getServiceInstanceUsingGETTest() throws ApiException {
        Long id = null;
        ServiceInstance response = api.getServiceInstanceUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * updateServiceInstance
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateServiceInstanceUsingPUTTest() throws ApiException {
        ServiceInstance serviceInstance = null;
        ServiceInstance response = api.updateServiceInstanceUsingPUT(serviceInstance);

        // TODO: test validations
    }
    
}
