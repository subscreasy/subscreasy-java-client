/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kodfarki.subscreasy.client;

import com.kodfarki.subscreasy.ApiException;
import com.kodfarki.subscreasy.client.model.ChargingLog;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChargingLogResourceApi
 */
@Ignore
public class ChargingLogResourceApiTest {

    private final ChargingLogResourceApi api = new ChargingLogResourceApi();

    
    /**
     * createChargingLog
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createChargingLogUsingPOSTTest() throws ApiException {
        ChargingLog chargingLog = null;
        ChargingLog response = api.createChargingLogUsingPOST(chargingLog);

        // TODO: test validations
    }
    
    /**
     * deleteChargingLog
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteChargingLogUsingDELETETest() throws ApiException {
        Long id = null;
        api.deleteChargingLogUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * getAllChargingLogs
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllChargingLogsUsingGETTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        List<ChargingLog> response = api.getAllChargingLogsUsingGET(page, size, sort);

        // TODO: test validations
    }
    
    /**
     * getChargingLog
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChargingLogUsingGETTest() throws ApiException {
        Long id = null;
        ChargingLog response = api.getChargingLogUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * refund
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void refundUsingPOSTTest() throws ApiException {
        Long chargingLogId = null;
        ChargingLog response = api.refundUsingPOST(chargingLogId);

        // TODO: test validations
    }
    
    /**
     * updateChargingLog
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateChargingLogUsingPUTTest() throws ApiException {
        ChargingLog chargingLog = null;
        ChargingLog response = api.updateChargingLogUsingPUT(chargingLog);

        // TODO: test validations
    }
    
}
