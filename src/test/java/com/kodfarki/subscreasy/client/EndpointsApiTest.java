/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kodfarki.subscreasy.client;

import com.kodfarki.subscreasy.ApiException;
import com.kodfarki.subscreasy.client.model.Authorization;
import com.kodfarki.subscreasy.client.model.AuthorizedServicesResponse;
import com.kodfarki.subscreasy.client.model.ChargingLog;
import com.kodfarki.subscreasy.client.model.Deduction;
import com.kodfarki.subscreasy.client.model.DeductionResult;
import com.kodfarki.subscreasy.client.model.InvoiceRequest;
import com.kodfarki.subscreasy.client.model.MessageTemplate;
import com.kodfarki.subscreasy.client.model.ServiceInstanceResult;
import com.kodfarki.subscreasy.client.model.ServiceOfferingResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EndpointsApi
 */
@Ignore
public class EndpointsApiTest {

    private final EndpointsApi api = new EndpointsApi();

    
    /**
     * authorize
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void authorizeUsingPUTTest() throws ApiException {
        Authorization authorization = null;
        Boolean response = api.authorizeUsingPUT(authorization);

        // TODO: test validations
    }
    
    /**
     * deduct
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deductUsingPUTTest() throws ApiException {
        Deduction deduction = null;
        DeductionResult response = api.deductUsingPUT(deduction);

        // TODO: test validations
    }
    
    /**
     * getAuthorizedServices
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAuthorizedServicesUsingGETTest() throws ApiException {
        String secureId = null;
        AuthorizedServicesResponse response = api.getAuthorizedServicesUsingGET(secureId);

        // TODO: test validations
    }
    
    /**
     * getChargingLogBySubscription
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChargingLogBySubscriptionUsingGETTest() throws ApiException {
        Long id = null;
        List<ChargingLog> response = api.getChargingLogBySubscriptionUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * getCustomerTotalAmount
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomerTotalAmountUsingGETTest() throws ApiException {
        String id = null;
        Long response = api.getCustomerTotalAmountUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * getInvoiceDetails
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInvoiceDetailsUsingGETTest() throws ApiException {
        InvoiceRequest invoiceRequest = null;
        Object response = api.getInvoiceDetailsUsingGET(invoiceRequest);

        // TODO: test validations
    }
    
    /**
     * getMessageTemplate
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMessageTemplateUsingGETTest() throws ApiException {
        String lifecycleEventName = null;
        MessageTemplate response = api.getMessageTemplateUsingGET(lifecycleEventName);

        // TODO: test validations
    }
    
    /**
     * getServiceInstancesBySubscription
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getServiceInstancesBySubscriptionUsingGETTest() throws ApiException {
        Long id = null;
        List<ServiceInstanceResult> response = api.getServiceInstancesBySubscriptionUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * getServiceOfferingsBySubscriptionPlan
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getServiceOfferingsBySubscriptionPlanUsingGETTest() throws ApiException {
        Long id = null;
        List<ServiceOfferingResult> response = api.getServiceOfferingsBySubscriptionPlanUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * getTotalRevenuePerMonth
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTotalRevenuePerMonthUsingGETTest() throws ApiException {
        Long id = null;
        List<Object> response = api.getTotalRevenuePerMonthUsingGET(id);

        // TODO: test validations
    }
    
}
